/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package ui;

import java.io.EOFException;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.util.ArrayList;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import src.Community;
import src.Person;

/**
 *
 * @author Trisha
 */
public class Admin extends javax.swing.JFrame {

transient ArrayList<Community> communityArr;
transient ArrayList<Person> personArr;
transient String communityFileName;
DefaultTableModel modelCommunity;
DefaultTableModel modelPerson;

//Community Add Edit 
Boolean communityAddEnable = Boolean.FALSE;
Boolean communityEditEnable = Boolean.FALSE;
int IndexOfCommunityToUpdat;

    /**
     * Creates new form Admin
     */
    public Admin() {
        initComponents();
        jLabel1.setVisible(false);
        jTextField1.setVisible(false);
        jLabel2.setVisible(false);
        jTextField2.setVisible(false);
        jButton4.setVisible(false);

communityArr =  new ArrayList<Community>();
personArr =  new ArrayList<Person>();
communityFileName = "";
modelCommunity = (DefaultTableModel) jTable1.getModel();
modelPerson = (DefaultTableModel) jTable2.getModel();
populateCommunityArrayList();
populatePersonArrayList();

displayCommunityData();
displayPersonData();
    }

public void populateCommunityArrayList() {
        try {
            FileInputStream file = new FileInputStream("communityCity.dat");
            ObjectInputStream ipfile = new ObjectInputStream(file);

            boolean eof = false;
            while (!eof) {
                try {
                    communityArr.add((Community) ipfile.readObject());
                } catch (EOFException eoe) {
                    eof = true;
                } catch (Exception e) {
                    JOptionPane.showMessageDialog(null, e.getMessage());
                }
            }
            ipfile.close();
        } catch (IOException ioe) {
            JOptionPane.showMessageDialog(null, ioe.getMessage());
        }

    }

public void populatePersonArrayList() {
        try {
            FileInputStream file = new FileInputStream("Person.dat");
            ObjectInputStream ipfile = new ObjectInputStream(file);

            boolean eof = false;
            while (!eof) {
                try {
                    personArr.add((Person) ipfile.readObject());
                } catch (EOFException eoe) {
                    eof = true;
                } catch (Exception e) {
                    JOptionPane.showMessageDialog(null, e.getMessage());
                }
            }
            ipfile.close();
        } catch (IOException ioe) {
            JOptionPane.showMessageDialog(null, ioe.getMessage());
        }
    }

public void displayCommunityData(){
modelCommunity.setRowCount(0);
for(Community c: communityArr){
modelCommunity.insertRow(modelCommunity.getRowCount(), new Object[]{c.getCommunity(),c.getCity()});
}
}

public void displayPersonData(){
modelPerson.setRowCount(0);
for(Person p : personArr){
modelPerson.insertRow(modelPerson.getRowCount(), new Object[]{p.getPersonId(),p.getName(),p.getDob(),p.getSsn(),p.getPassportNo(),p.getCommunityName(),p.getCity(),p.getMobileNo(),p.getEmailId(),p.getEmergencyContactName(),p.getEmergencyContactMobile(),p.getGender(),p.getIsPatient()});
}
}

    public void saveCommunityFile() {
        try {
            FileOutputStream file = new FileOutputStream("communityCity.dat");
            ObjectOutputStream otFile = new ObjectOutputStream(file);
            for (int i = 0; i < communityArr.size(); i++) {
                otFile.writeObject(communityArr.get(i));
            }
            otFile.close();
            JOptionPane.showMessageDialog(null, "Data saved Successfully");
            this.dispose();
        } catch (IOException e) {
            JOptionPane.showMessageDialog(null, e.getMessage());
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JTextField();
        jButton4 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        button1 = new java.awt.Button();
        button2 = new java.awt.Button();
        button3 = new java.awt.Button();
        jButton5 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(1930, 1000));
        setPreferredSize(new java.awt.Dimension(1812, 865));

        jPanel1.setBackground(new java.awt.Color(42, 183, 210));
        jPanel1.setPreferredSize(new java.awt.Dimension(1581, 838));

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Community Name", "City"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTable1);

        jButton1.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jButton1.setText("Add Community Details");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jButton2.setText("Edit Community Details");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jButton3.setText("Delete Community");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jLabel1.setText("Community Name : ");

        jLabel2.setText("City : ");

        jTextField2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField2ActionPerformed(evt);
            }
        });

        jButton4.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jButton4.setText("Save");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Name", "DOB", "SSN", "Passport", "Community Name", "City", "Mobile Number", "Email", "Emergency Contact Name", "Emergency Contact Number", "Gender", "Is patient?"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, true, true, true, true, true, true, true, true, true, true, true, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(jTable2);

        button1.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        button1.setLabel("Add");
        button1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button1ActionPerformed(evt);
            }
        });

        button2.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        button2.setLabel("Edit");
        button2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button2ActionPerformed(evt);
            }
        });

        button3.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        button3.setLabel("Delete");
        button3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button3ActionPerformed(evt);
            }
        });

        jButton5.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jButton5.setText("Refresh");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(62, 62, 62)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 797, Short.MAX_VALUE)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(73, 73, 73)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jLabel1)
                                .addComponent(jTextField1)
                                .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 213, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jScrollPane2))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(button1, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(69, 69, 69)
                .addComponent(button2, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(103, 103, 103)
                .addComponent(button3, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(92, 92, 92)
                .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(178, 178, 178))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(9, 9, 9)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(32, 32, 32)
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(51, 51, 51)
                                .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jButton1)
                                .addGap(41, 41, 41)
                                .addComponent(jButton2)
                                .addGap(51, 51, 51)
                                .addComponent(jButton3))))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 257, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 314, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(button3, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(button2, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(button1, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(30, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 1370, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 721, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTextField2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        jLabel1.setVisible(true);
        jTextField1.setVisible(true);
        jLabel2.setVisible(true);
        jTextField2.setVisible(true);
        jButton4.setVisible(true);
        communityAddEnable = Boolean.TRUE;
        communityEditEnable = Boolean.FALSE;
        //IndexOfCommunityToUpdat = -1;
    }//GEN-LAST:event_jButton1ActionPerformed

    private void button1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button1ActionPerformed
new AddPerson().setVisible(true);        
displayPersonData();
    }//GEN-LAST:event_button1ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        String communityName = this.jTextField1.getText().trim();
        String cityName = this.jTextField2.getText().trim();

if(communityName.equalsIgnoreCase("") || cityName.equalsIgnoreCase("")){
JOptionPane.showMessageDialog(this, "Enter all Details");return;
}


if(communityEditEnable == Boolean.TRUE){
IndexOfCommunityToUpdat = jTable1.getSelectedRow();
Community comToUpdate = communityArr.get(IndexOfCommunityToUpdat);
comToUpdate.setCommunity(this.jTextField1.getText().trim());
comToUpdate.setCity(this.jTextField2.getText().trim());
saveCommunityFile();
}else {
        Community c = new Community(communityName, cityName);
        communityArr.add(c);
        saveCommunityFile();
}
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
int row = jTable1.getSelectedRow();
String communityName = (String) jTable1.getValueAt(row, 0);
for(Person p: personArr){
if(p.getCommunityName().equalsIgnoreCase(communityName)){
JOptionPane.showMessageDialog(this, "Can not modify details as Community is exisitng address of person");return;
}}
        jLabel1.setVisible(true);
        jTextField1.setVisible(true);
        jLabel2.setVisible(true);
        jTextField2.setVisible(true);
        jButton4.setVisible(true);
        communityAddEnable = Boolean.FALSE;
        communityEditEnable = Boolean.TRUE;
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
       displayPersonData();
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
int row = jTable1.getSelectedRow();
String communityName = (String) jTable1.getValueAt(row, 0);
        for(Person p: personArr){
if(p.getCommunityName().equalsIgnoreCase(communityName)){
JOptionPane.showMessageDialog(this, "Can not Delete details as Community is exisitng address of person");return;
}}

for(int i=0;i<communityArr.size();i++){
if(communityArr.get(i).getCommunity().equalsIgnoreCase(communityName)){
communityArr.remove(i);
saveCommunityFile();
}
}
    }//GEN-LAST:event_jButton3ActionPerformed

    private void button2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button2ActionPerformed
        int row = jTable2.getSelectedRow();
if(jTable2.getValueAt(row, 1).equals("") || jTable2.getValueAt(row, 2).equals("") || jTable2.getValueAt(row, 3).equals("") || jTable2.getValueAt(row, 4).equals("") || jTable2.getValueAt(row, 5).equals("") || jTable2.getValueAt(row, 6).equals("") || jTable2.getValueAt(row, 7).equals("") || jTable2.getValueAt(row, 8).equals("") || jTable2.getValueAt(row, 9).equals("") || jTable2.getValueAt(row, 10).equals("") || jTable2.getValueAt(row, 11).equals("")){
JOptionPane.showMessageDialog(this, "Enter valid value for all parameters. Data should not be a blank value.");return;
}
        long personId = (long) jTable2.getValueAt(row, 0);
        String name = (String) jTable2.getValueAt(row, 1);
        Date dob = (Date) jTable2.getValueAt(row, 2);
        String ssn = (String) jTable2.getValueAt(row, 3);
        String passport = (String) jTable2.getValueAt(row, 4);
        String community = (String) jTable2.getValueAt(row, 5);
        String city = (String) jTable2.getValueAt(row, 6);
        long mobile = (long) jTable2.getValueAt(row, 7);
        String email = (String) jTable2.getValueAt(row, 8);
        String emergencyName = (String) jTable2.getValueAt(row, 9);
        long emergencyMobile = (long) jTable2.getValueAt(row, 10);
        char gender = (char) jTable2.getValueAt(row, 11);
        char isPatient = (char) jTable2.getValueAt(row, 12);

//if(personId == 0L || name.equals("") || dob.equals("") || ssn.equals("") || passport.equals("") || community.equals("") || city.equals("") || mobile == 0L || email.equals("") || emergencyName.equals("") || emergencyMobile == 0L || gender == ''){
//if(personId == 0L || name.equals("") || dob.equals("") || ssn.equals("") || passport.equals("") || community.equals("") || city.equals("") || mobile == 0L || email.equals("") || emergencyName.equals("") || emergencyMobile == 0L || gender == ' '){
//JOptionPane.showMessageDialog(this, "Enter valid value for all parameters. Data should not be a blank value.");return;
//}
Boolean communityExist = Boolean.FALSE;
for(Community c : communityArr){
if(c.getCommunity().equals(community));communityExist = Boolean.TRUE;
}
Boolean cityyExist = Boolean.FALSE;
for(Community c : communityArr){
if(c.getCity().equals(city));cityyExist = Boolean.TRUE;
}


if(communityExist.equals(Boolean.FALSE)){
JOptionPane.showMessageDialog(this, "Enter valid coomunity");return;}

if(cityyExist.equals(Boolean.FALSE)){
JOptionPane.showMessageDialog(this, "Enter valid city");return;}

        if (jTable2.getValueAt(row, 7).toString().trim().length() > 10) {
            JOptionPane.showMessageDialog(null, "Mobile Number : Enter valid mobile Numbers");
            return;
        }

        if (jTable2.getValueAt(row, 10).toString().trim().length() > 10) {
            JOptionPane.showMessageDialog(null, "Emergency Mobile Number : Enter valid mobile Numbers");
            return;
        }

        if (!email.contains("@")) {
            JOptionPane.showMessageDialog(null, "Email : Enter valid email");
            return;
        }

        for (Person p : personArr) {
            if (p.getPersonId() == personId) {
                p.setName(name);
                p.setDob(dob);
                p.setSsn(ssn);
                p.setPassportNo(passport);
                p.setCommunityName(community);
                p.setCity(city);
                p.setMobileNo(mobile);
                p.setEmailId(email);
                p.setEmergencyContactName(emergencyName);
                p.setEmergencyContactMobile(emergencyMobile);
                p.setGender(gender);
                p.setIsPatient(isPatient);
            }
        }
        savePersonFile();
    }//GEN-LAST:event_button2ActionPerformed

    private void button3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button3ActionPerformed
        int row = jTable2.getSelectedRow();
        long personId = (long) jTable2.getValueAt(row, 0);
char isPatient = (char) jTable2.getValueAt(row, 12);
if(isPatient == 'Y'){
JOptionPane.showMessageDialog(this, "Can not delete this record as this is already a patient.");return;
}
for(int i=0;i<personArr.size();i++){
if(personArr.get(i).getPersonId() == personId){
personArr.remove(i);
}
}
savePersonFile();

    }//GEN-LAST:event_button3ActionPerformed

public void savePersonFile() {
        try {
            FileOutputStream file = new FileOutputStream("Person.dat");
            ObjectOutputStream otFile = new ObjectOutputStream(file);
            for (int i = 0; i < personArr.size(); i++) {
                otFile.writeObject(personArr.get(i));
            }
            otFile.close();
            JOptionPane.showMessageDialog(null, "Data saved Successfully");
            this.dispose();
        } catch (IOException e) {
            JOptionPane.showMessageDialog(null, e.getMessage());
        }
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Admin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Admin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Admin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Admin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Admin().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private java.awt.Button button1;
    private java.awt.Button button2;
    private java.awt.Button button3;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    // End of variables declaration//GEN-END:variables
}
